{"contracts":{"contracts/0x217cbe76b78a81d0a4afd271fb1c3b7178b8f513_0.5.14:IERC20":{"bin-runtime":"","srcmap-runtime":""},"contracts/0x217cbe76b78a81d0a4afd271fb1c3b7178b8f513_0.5.14:SafeMath":{"bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205a4bd4af574e5f948f7977b2365aaa2488766dd3605c4014a925bd4d072aa3e764736f6c634300050e0032","srcmap-runtime":"675:4722:0:-;;;;;;;;"},"contracts/0x217cbe76b78a81d0a4afd271fb1c3b7178b8f513_0.5.14:SwapToken":{"bin-runtime":"608060405234801561001057600080fd5b506004361061004c5760003560e01c80630ddddbce146100515780631ebe57781461018a578063a9ab232b146101a8578063f09c5829146101d6575b600080fd5b610188600480360360e081101561006757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561010257600080fd5b82018360208201111561011457600080fd5b8035906020019184600183028401116401000000008311171561013657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610370565b005b610192610646565b6040518082815260200191505060405180910390f35b6101d4600480360360208110156101be57600080fd5b810190808035906020019092919050505061064c565b005b610202600480360360208110156101ec57600080fd5b8101908080359060200190929190505050610a25565b604051808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b8381101561032c578082015181840152602081019050610311565b50505050905090810190601f1680156103595780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b60006103886001600054610b9e90919063ffffffff16565b9050600061039f8442610b9e90919063ffffffff16565b90506103b76001600054610b9e90919063ffffffff16565b6000819055506040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001848152602001600015158152506001600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006015560e082015181600701556101008201518160080190805190602001906105d2929190610c26565b506101208201518160090160006101000a81548160ff021916908315150217905550905050813373ffffffffffffffffffffffffffffffffffffffff167f6f3bf3fa84e4763a43b3d23f9d79be242d6d5c834941ff4c1111b67469e1150c60405160405180910390a3505050505050505050565b60005481565b60006001600083815260200190815260200160002090508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bf57600080fd5b600015158160090160009054906101000a900460ff161515146106e157600080fd5b80600701544211156106f257600080fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561081d57600080fd5b505af1158015610831573d6000803e3d6000fd5b505050506040513d602081101561084757600080fd5b8101908080519060200190929190505050508060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8260030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600401546040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505050506040513d60208110156109ae57600080fd5b81019080805190602001909291905050505060018160090160006101000a81548160ff021916908315150217905550813373ffffffffffffffffffffffffffffffffffffffff167f6f6c6d78a4851d4c222c8404fc92372ee84b7b81054305ae8ea3c83c2dabd42e60405160405180910390a35050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806006015490806007015490806008018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b815780601f10610b5657610100808354040283529160200191610b81565b820191906000526020600020905b815481529060010190602001808311610b6457829003601f168201915b5050505050908060090160009054906101000a900460ff1690508a565b600080828401905083811015610c1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c6757805160ff1916838001178555610c95565b82800160010185558215610c95579182015b82811115610c94578251825591602001919060010190610c79565b5b509050610ca29190610ca6565b5090565b610cc891905b80821115610cc4576000816000905550600101610cac565b5090565b9056fea265627a7a72315820daa14635c15ed54654ec88d3d79717aac5720539c90d7344e890199b7a31d13e64736f6c634300050e0032","srcmap-runtime":"8195:1913:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8195:1913:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8861:728;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8861:728:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8861:728:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8861:728:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8861:728:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8861:728:0;;;;;;;;;;;;;;;:::i;:::-;;8326:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9601:504;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9601:504:0;;;;;;;;;;;;;;;;;:::i;:::-;;8364:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8364:38:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8364:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8861:728;9081:18;9102:22;9122:1;9102:15;;:19;;:22;;;;:::i;:::-;9081:43;;9136:23;9162:17;9170:8;9162:3;:7;;:17;;;;:::i;:::-;9136:43;;9209:22;9229:1;9209:15;;:19;;:22;;;;:::i;:::-;9191:15;:40;;;;9273:247;;;;;;;;9293:10;9273:247;;;;;;9318:10;9273:247;;;;9343:9;9273:247;;;;;;9367:6;9273:247;;;;;;9388:10;9273:247;;;;9413:9;9273:247;;;;;;9437:10;9273:247;;;;9462:15;9273:247;;;;9492:7;9273:247;;;;9514:5;9273:247;;;;;9253:5;:17;9259:10;9253:17;;;;;;;;;;;:267;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9569:10;9557;9546:34;;;;;;;;;;;;8861:728;;;;;;;;;:::o;8326:30::-;;;;:::o;9601:504::-;9661:17;9681:5;:17;9687:10;9681:17;;;;;;;;;;;9661:37;;9732:4;:11;;;;;;;;;;;;9718:25;;:10;:25;;;9710:34;;;;;;9780:5;9763:22;;:4;:13;;;;;;;;;;;;:22;;;9755:31;;;;;;9813:4;:20;;;9806:3;:27;;9798:36;;;;;;9856:4;:14;;;;;;;;;;;;:27;;;9884:4;:11;;;;;;;;;;;;9897:4;:11;;;;;;;;;;;;9910:4;:15;;;9856:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9856:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9856:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9856:70:0;;;;;;;;;;;;;;;;;9937:4;:14;;;;;;;;;;;;:27;;;9965:4;:11;;;;;;;;;;;;9978:4;:11;;;;;;;;;;;;9991:4;:15;;;9937:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9937:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9937:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9937:70:0;;;;;;;;;;;;;;;;;10044:4;10028;:13;;;:20;;;;;;;;;;;;;;;;;;10085:10;10073;10064:32;;;;;;;;;;;;9601:504;;:::o;8364:38::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;930:181::-;988:7;1008:9;1024:1;1020;:5;1008:17;;1049:1;1044;:6;;1036:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1102:1;1095:8;;;930:181;;;;:::o;8195:1913::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"}},"sourceList":["contracts/0x217cbe76b78a81d0a4afd271fb1c3b7178b8f513_0.5.14"],"sources":{"contracts/0x217cbe76b78a81d0a4afd271fb1c3b7178b8f513_0.5.14":{"AST":{"attributes":{"absolutePath":"contracts/0x217cbe76b78a81d0a4afd271fb1c3b7178b8f513_0.5.14","exportedSymbols":{"IERC20":[253],"SafeMath":[186],"SwapToken":[431]}},"children":[{"attributes":{"literals":["solidity","0.5",".14"]},"id":1,"name":"PragmaDirective","src":"71:23:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.","fullyImplemented":true,"linearizedBaseContracts":[186],"name":"SafeMath","scope":432},"children":[{"attributes":{"documentation":"@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n     * Counterpart to Solidity's `+` operator.\n\n     * Requirements:\n- Addition cannot overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"add","scope":186,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":26,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"943:7:0"}],"id":3,"name":"VariableDeclaration","src":"943:9:0"},{"attributes":{"constant":false,"name":"b","scope":26,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":4,"name":"ElementaryTypeName","src":"954:7:0"}],"id":5,"name":"VariableDeclaration","src":"954:9:0"}],"id":6,"name":"ParameterList","src":"942:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":26,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":7,"name":"ElementaryTypeName","src":"988:7:0"}],"id":8,"name":"VariableDeclaration","src":"988:7:0"}],"id":9,"name":"ParameterList","src":"987:9:0"},{"children":[{"attributes":{"assignments":[11]},"children":[{"attributes":{"constant":false,"name":"c","scope":25,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":10,"name":"ElementaryTypeName","src":"1008:7:0"}],"id":11,"name":"VariableDeclaration","src":"1008:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"uint256","value":"a"},"id":12,"name":"Identifier","src":"1020:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"uint256","value":"b"},"id":13,"name":"Identifier","src":"1024:1:0"}],"id":14,"name":"BinaryOperation","src":"1020:5:0"}],"id":15,"name":"VariableDeclarationStatement","src":"1008:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"overloadedDeclarations":[449,450],"referencedDeclaration":450,"type":"function (bool,string memory) pure","value":"require"},"id":16,"name":"Identifier","src":"1036:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":11,"type":"uint256","value":"c"},"id":17,"name":"Identifier","src":"1044:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"uint256","value":"a"},"id":18,"name":"Identifier","src":"1049:1:0"}],"id":19,"name":"BinaryOperation","src":"1044:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206164646974696f6e206f766572666c6f77","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: addition overflow\"","value":"SafeMath: addition overflow"},"id":20,"name":"Literal","src":"1052:29:0"}],"id":21,"name":"FunctionCall","src":"1036:46:0"}],"id":22,"name":"ExpressionStatement","src":"1036:46:0"},{"attributes":{"functionReturnParameters":9},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":11,"type":"uint256","value":"c"},"id":23,"name":"Identifier","src":"1102:1:0"}],"id":24,"name":"Return","src":"1095:8:0"}],"id":25,"name":"Block","src":"997:114:0"}],"id":26,"name":"FunctionDefinition","src":"930:181:0"},{"attributes":{"documentation":"@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n     * Counterpart to Solidity's `-` operator.\n\n     * Requirements:\n- Subtraction cannot overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"sub","scope":186,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":42,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":27,"name":"ElementaryTypeName","src":"1399:7:0"}],"id":28,"name":"VariableDeclaration","src":"1399:9:0"},{"attributes":{"constant":false,"name":"b","scope":42,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":29,"name":"ElementaryTypeName","src":"1410:7:0"}],"id":30,"name":"VariableDeclaration","src":"1410:9:0"}],"id":31,"name":"ParameterList","src":"1398:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":42,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":32,"name":"ElementaryTypeName","src":"1444:7:0"}],"id":33,"name":"VariableDeclaration","src":"1444:7:0"}],"id":34,"name":"ParameterList","src":"1443:9:0"},{"children":[{"attributes":{"functionReturnParameters":34},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"overloadedDeclarations":[42,69],"referencedDeclaration":69,"type":"function (uint256,uint256,string memory) pure returns (uint256)","value":"sub"},"id":35,"name":"Identifier","src":"1471:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":28,"type":"uint256","value":"a"},"id":36,"name":"Identifier","src":"1475:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"uint256","value":"b"},"id":37,"name":"Identifier","src":"1478:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: subtraction overflow\"","value":"SafeMath: subtraction overflow"},"id":38,"name":"Literal","src":"1481:32:0"}],"id":39,"name":"FunctionCall","src":"1471:43:0"}],"id":40,"name":"Return","src":"1464:50:0"}],"id":41,"name":"Block","src":"1453:69:0"}],"id":42,"name":"FunctionDefinition","src":"1386:136:0"},{"attributes":{"documentation":"@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n     * Counterpart to Solidity's `-` operator.\n\n     * Requirements:\n- Subtraction cannot overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"sub","scope":186,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":69,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":43,"name":"ElementaryTypeName","src":"1830:7:0"}],"id":44,"name":"VariableDeclaration","src":"1830:9:0"},{"attributes":{"constant":false,"name":"b","scope":69,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":45,"name":"ElementaryTypeName","src":"1841:7:0"}],"id":46,"name":"VariableDeclaration","src":"1841:9:0"},{"attributes":{"constant":false,"name":"errorMessage","scope":69,"stateVariable":false,"storageLocation":"memory","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":47,"name":"ElementaryTypeName","src":"1852:6:0"}],"id":48,"name":"VariableDeclaration","src":"1852:26:0"}],"id":49,"name":"ParameterList","src":"1829:50:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":69,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":50,"name":"ElementaryTypeName","src":"1903:7:0"}],"id":51,"name":"VariableDeclaration","src":"1903:7:0"}],"id":52,"name":"ParameterList","src":"1902:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[449,450],"referencedDeclaration":450,"type":"function (bool,string memory) pure","value":"require"},"id":53,"name":"Identifier","src":"1923:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":46,"type":"uint256","value":"b"},"id":54,"name":"Identifier","src":"1931:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":44,"type":"uint256","value":"a"},"id":55,"name":"Identifier","src":"1936:1:0"}],"id":56,"name":"BinaryOperation","src":"1931:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":48,"type":"string memory","value":"errorMessage"},"id":57,"name":"Identifier","src":"1939:12:0"}],"id":58,"name":"FunctionCall","src":"1923:29:0"}],"id":59,"name":"ExpressionStatement","src":"1923:29:0"},{"attributes":{"assignments":[61]},"children":[{"attributes":{"constant":false,"name":"c","scope":68,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":60,"name":"ElementaryTypeName","src":"1963:7:0"}],"id":61,"name":"VariableDeclaration","src":"1963:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":44,"type":"uint256","value":"a"},"id":62,"name":"Identifier","src":"1975:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":46,"type":"uint256","value":"b"},"id":63,"name":"Identifier","src":"1979:1:0"}],"id":64,"name":"BinaryOperation","src":"1975:5:0"}],"id":65,"name":"VariableDeclarationStatement","src":"1963:17:0"},{"attributes":{"functionReturnParameters":52},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":61,"type":"uint256","value":"c"},"id":66,"name":"Identifier","src":"2000:1:0"}],"id":67,"name":"Return","src":"1993:8:0"}],"id":68,"name":"Block","src":"1912:97:0"}],"id":69,"name":"FunctionDefinition","src":"1817:192:0"},{"attributes":{"documentation":"@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n     * Counterpart to Solidity's `*` operator.\n\n     * Requirements:\n- Multiplication cannot overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mul","scope":186,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":103,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":70,"name":"ElementaryTypeName","src":"2273:7:0"}],"id":71,"name":"VariableDeclaration","src":"2273:9:0"},{"attributes":{"constant":false,"name":"b","scope":103,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":72,"name":"ElementaryTypeName","src":"2284:7:0"}],"id":73,"name":"VariableDeclaration","src":"2284:9:0"}],"id":74,"name":"ParameterList","src":"2272:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":103,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":75,"name":"ElementaryTypeName","src":"2318:7:0"}],"id":76,"name":"VariableDeclaration","src":"2318:7:0"}],"id":77,"name":"ParameterList","src":"2317:9:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"uint256","value":"a"},"id":78,"name":"Identifier","src":"2563:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":79,"name":"Literal","src":"2568:1:0"}],"id":80,"name":"BinaryOperation","src":"2563:6:0"},{"children":[{"attributes":{"functionReturnParameters":77},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":81,"name":"Literal","src":"2593:1:0"}],"id":82,"name":"Return","src":"2586:8:0"}],"id":83,"name":"Block","src":"2571:35:0"}],"id":84,"name":"IfStatement","src":"2559:47:0"},{"attributes":{"assignments":[86]},"children":[{"attributes":{"constant":false,"name":"c","scope":102,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":85,"name":"ElementaryTypeName","src":"2618:7:0"}],"id":86,"name":"VariableDeclaration","src":"2618:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"uint256","value":"a"},"id":87,"name":"Identifier","src":"2630:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":73,"type":"uint256","value":"b"},"id":88,"name":"Identifier","src":"2634:1:0"}],"id":89,"name":"BinaryOperation","src":"2630:5:0"}],"id":90,"name":"VariableDeclarationStatement","src":"2618:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"overloadedDeclarations":[449,450],"referencedDeclaration":450,"type":"function (bool,string memory) pure","value":"require"},"id":91,"name":"Identifier","src":"2646:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":86,"type":"uint256","value":"c"},"id":92,"name":"Identifier","src":"2654:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"uint256","value":"a"},"id":93,"name":"Identifier","src":"2658:1:0"}],"id":94,"name":"BinaryOperation","src":"2654:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":73,"type":"uint256","value":"b"},"id":95,"name":"Identifier","src":"2663:1:0"}],"id":96,"name":"BinaryOperation","src":"2654:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: multiplication overflow\"","value":"SafeMath: multiplication overflow"},"id":97,"name":"Literal","src":"2666:35:0"}],"id":98,"name":"FunctionCall","src":"2646:56:0"}],"id":99,"name":"ExpressionStatement","src":"2646:56:0"},{"attributes":{"functionReturnParameters":77},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":86,"type":"uint256","value":"c"},"id":100,"name":"Identifier","src":"2722:1:0"}],"id":101,"name":"Return","src":"2715:8:0"}],"id":102,"name":"Block","src":"2327:404:0"}],"id":103,"name":"FunctionDefinition","src":"2260:471:0"},{"attributes":{"documentation":"@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n- The divisor cannot be zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"div","scope":186,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":119,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":104,"name":"ElementaryTypeName","src":"3212:7:0"}],"id":105,"name":"VariableDeclaration","src":"3212:9:0"},{"attributes":{"constant":false,"name":"b","scope":119,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":106,"name":"ElementaryTypeName","src":"3223:7:0"}],"id":107,"name":"VariableDeclaration","src":"3223:9:0"}],"id":108,"name":"ParameterList","src":"3211:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":119,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":109,"name":"ElementaryTypeName","src":"3257:7:0"}],"id":110,"name":"VariableDeclaration","src":"3257:7:0"}],"id":111,"name":"ParameterList","src":"3256:9:0"},{"children":[{"attributes":{"functionReturnParameters":111},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"overloadedDeclarations":[119,146],"referencedDeclaration":146,"type":"function (uint256,uint256,string memory) pure returns (uint256)","value":"div"},"id":112,"name":"Identifier","src":"3284:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":105,"type":"uint256","value":"a"},"id":113,"name":"Identifier","src":"3288:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":107,"type":"uint256","value":"b"},"id":114,"name":"Identifier","src":"3291:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206469766973696f6e206279207a65726f","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: division by zero\"","value":"SafeMath: division by zero"},"id":115,"name":"Literal","src":"3294:28:0"}],"id":116,"name":"FunctionCall","src":"3284:39:0"}],"id":117,"name":"Return","src":"3277:46:0"}],"id":118,"name":"Block","src":"3266:65:0"}],"id":119,"name":"FunctionDefinition","src":"3199:132:0"},{"attributes":{"documentation":"@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n- The divisor cannot be zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"div","scope":186,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":146,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":120,"name":"ElementaryTypeName","src":"3832:7:0"}],"id":121,"name":"VariableDeclaration","src":"3832:9:0"},{"attributes":{"constant":false,"name":"b","scope":146,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":122,"name":"ElementaryTypeName","src":"3843:7:0"}],"id":123,"name":"VariableDeclaration","src":"3843:9:0"},{"attributes":{"constant":false,"name":"errorMessage","scope":146,"stateVariable":false,"storageLocation":"memory","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":124,"name":"ElementaryTypeName","src":"3854:6:0"}],"id":125,"name":"VariableDeclaration","src":"3854:26:0"}],"id":126,"name":"ParameterList","src":"3831:50:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":146,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":127,"name":"ElementaryTypeName","src":"3905:7:0"}],"id":128,"name":"VariableDeclaration","src":"3905:7:0"}],"id":129,"name":"ParameterList","src":"3904:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[449,450],"referencedDeclaration":450,"type":"function (bool,string memory) pure","value":"require"},"id":130,"name":"Identifier","src":"3992:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":123,"type":"uint256","value":"b"},"id":131,"name":"Identifier","src":"4000:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":132,"name":"Literal","src":"4004:1:0"}],"id":133,"name":"BinaryOperation","src":"4000:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":125,"type":"string memory","value":"errorMessage"},"id":134,"name":"Identifier","src":"4007:12:0"}],"id":135,"name":"FunctionCall","src":"3992:28:0"}],"id":136,"name":"ExpressionStatement","src":"3992:28:0"},{"attributes":{"assignments":[138]},"children":[{"attributes":{"constant":false,"name":"c","scope":145,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":137,"name":"ElementaryTypeName","src":"4031:7:0"}],"id":138,"name":"VariableDeclaration","src":"4031:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":121,"type":"uint256","value":"a"},"id":139,"name":"Identifier","src":"4043:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":123,"type":"uint256","value":"b"},"id":140,"name":"Identifier","src":"4047:1:0"}],"id":141,"name":"BinaryOperation","src":"4043:5:0"}],"id":142,"name":"VariableDeclarationStatement","src":"4031:17:0"},{"attributes":{"functionReturnParameters":129},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":138,"type":"uint256","value":"c"},"id":143,"name":"Identifier","src":"4155:1:0"}],"id":144,"name":"Return","src":"4148:8:0"}],"id":145,"name":"Block","src":"3914:250:0"}],"id":146,"name":"FunctionDefinition","src":"3819:345:0"},{"attributes":{"documentation":"@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n- The divisor cannot be zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mod","scope":186,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":147,"name":"ElementaryTypeName","src":"4634:7:0"}],"id":148,"name":"VariableDeclaration","src":"4634:9:0"},{"attributes":{"constant":false,"name":"b","scope":162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":149,"name":"ElementaryTypeName","src":"4645:7:0"}],"id":150,"name":"VariableDeclaration","src":"4645:9:0"}],"id":151,"name":"ParameterList","src":"4633:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":162,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":152,"name":"ElementaryTypeName","src":"4679:7:0"}],"id":153,"name":"VariableDeclaration","src":"4679:7:0"}],"id":154,"name":"ParameterList","src":"4678:9:0"},{"children":[{"attributes":{"functionReturnParameters":154},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"overloadedDeclarations":[162,185],"referencedDeclaration":185,"type":"function (uint256,uint256,string memory) pure returns (uint256)","value":"mod"},"id":155,"name":"Identifier","src":"4706:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":148,"type":"uint256","value":"a"},"id":156,"name":"Identifier","src":"4710:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":150,"type":"uint256","value":"b"},"id":157,"name":"Identifier","src":"4713:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206d6f64756c6f206279207a65726f","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: modulo by zero\"","value":"SafeMath: modulo by zero"},"id":158,"name":"Literal","src":"4716:26:0"}],"id":159,"name":"FunctionCall","src":"4706:37:0"}],"id":160,"name":"Return","src":"4699:44:0"}],"id":161,"name":"Block","src":"4688:63:0"}],"id":162,"name":"FunctionDefinition","src":"4621:130:0"},{"attributes":{"documentation":"@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n- The divisor cannot be zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mod","scope":186,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":185,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":163,"name":"ElementaryTypeName","src":"5241:7:0"}],"id":164,"name":"VariableDeclaration","src":"5241:9:0"},{"attributes":{"constant":false,"name":"b","scope":185,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":165,"name":"ElementaryTypeName","src":"5252:7:0"}],"id":166,"name":"VariableDeclaration","src":"5252:9:0"},{"attributes":{"constant":false,"name":"errorMessage","scope":185,"stateVariable":false,"storageLocation":"memory","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":167,"name":"ElementaryTypeName","src":"5263:6:0"}],"id":168,"name":"VariableDeclaration","src":"5263:26:0"}],"id":169,"name":"ParameterList","src":"5240:50:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":185,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":170,"name":"ElementaryTypeName","src":"5314:7:0"}],"id":171,"name":"VariableDeclaration","src":"5314:7:0"}],"id":172,"name":"ParameterList","src":"5313:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[449,450],"referencedDeclaration":450,"type":"function (bool,string memory) pure","value":"require"},"id":173,"name":"Identifier","src":"5334:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":166,"type":"uint256","value":"b"},"id":174,"name":"Identifier","src":"5342:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":175,"name":"Literal","src":"5347:1:0"}],"id":176,"name":"BinaryOperation","src":"5342:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"string memory","value":"errorMessage"},"id":177,"name":"Identifier","src":"5350:12:0"}],"id":178,"name":"FunctionCall","src":"5334:29:0"}],"id":179,"name":"ExpressionStatement","src":"5334:29:0"},{"attributes":{"functionReturnParameters":172},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":164,"type":"uint256","value":"a"},"id":180,"name":"Identifier","src":"5381:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":166,"type":"uint256","value":"b"},"id":181,"name":"Identifier","src":"5385:1:0"}],"id":182,"name":"BinaryOperation","src":"5381:5:0"}],"id":183,"name":"Return","src":"5374:12:0"}],"id":184,"name":"Block","src":"5323:71:0"}],"id":185,"name":"FunctionDefinition","src":"5228:166:0"}],"id":186,"name":"ContractDefinition","src":"675:4722:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"interface","documentation":"@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.","fullyImplemented":false,"linearizedBaseContracts":[253],"name":"IERC20","scope":432},"children":[{"attributes":{"body":null,"documentation":"@dev Returns the amount of tokens in existence.","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"totalSupply","scope":253,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":187,"name":"ParameterList","src":"5674:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":191,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":188,"name":"ElementaryTypeName","src":"5700:7:0"}],"id":189,"name":"VariableDeclaration","src":"5700:7:0"}],"id":190,"name":"ParameterList","src":"5699:9:0"}],"id":191,"name":"FunctionDefinition","src":"5654:55:0"},{"attributes":{"body":null,"documentation":"@dev Returns the amount of tokens owned by `account`.","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"balanceOf","scope":253,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"account","scope":198,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":192,"name":"ElementaryTypeName","src":"5816:7:0"}],"id":193,"name":"VariableDeclaration","src":"5816:15:0"}],"id":194,"name":"ParameterList","src":"5815:17:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":198,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":195,"name":"ElementaryTypeName","src":"5856:7:0"}],"id":196,"name":"VariableDeclaration","src":"5856:7:0"}],"id":197,"name":"ParameterList","src":"5855:9:0"}],"id":198,"name":"FunctionDefinition","src":"5797:68:0"},{"attributes":{"body":null,"documentation":"@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * Emits a {Transfer} event.","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"transfer","scope":253,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"recipient","scope":207,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":199,"name":"ElementaryTypeName","src":"6112:7:0"}],"id":200,"name":"VariableDeclaration","src":"6112:17:0"},{"attributes":{"constant":false,"name":"amount","scope":207,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":201,"name":"ElementaryTypeName","src":"6131:7:0"}],"id":202,"name":"VariableDeclaration","src":"6131:14:0"}],"id":203,"name":"ParameterList","src":"6111:35:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":207,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":204,"name":"ElementaryTypeName","src":"6165:4:0"}],"id":205,"name":"VariableDeclaration","src":"6165:4:0"}],"id":206,"name":"ParameterList","src":"6164:6:0"}],"id":207,"name":"FunctionDefinition","src":"6094:77:0"},{"attributes":{"body":null,"documentation":"@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n     * This value changes when {approve} or {transferFrom} are called.","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"allowance","scope":253,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"owner","scope":216,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":208,"name":"ElementaryTypeName","src":"6474:7:0"}],"id":209,"name":"VariableDeclaration","src":"6474:13:0"},{"attributes":{"constant":false,"name":"spender","scope":216,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":210,"name":"ElementaryTypeName","src":"6489:7:0"}],"id":211,"name":"VariableDeclaration","src":"6489:15:0"}],"id":212,"name":"ParameterList","src":"6473:32:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":216,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":213,"name":"ElementaryTypeName","src":"6529:7:0"}],"id":214,"name":"VariableDeclaration","src":"6529:7:0"}],"id":215,"name":"ParameterList","src":"6528:9:0"}],"id":216,"name":"FunctionDefinition","src":"6455:83:0"},{"attributes":{"body":null,"documentation":"@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n     * Emits an {Approval} event.","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"approve","scope":253,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"spender","scope":225,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":217,"name":"ElementaryTypeName","src":"7224:7:0"}],"id":218,"name":"VariableDeclaration","src":"7224:15:0"},{"attributes":{"constant":false,"name":"amount","scope":225,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":219,"name":"ElementaryTypeName","src":"7241:7:0"}],"id":220,"name":"VariableDeclaration","src":"7241:14:0"}],"id":221,"name":"ParameterList","src":"7223:33:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":225,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":222,"name":"ElementaryTypeName","src":"7275:4:0"}],"id":223,"name":"VariableDeclaration","src":"7275:4:0"}],"id":224,"name":"ParameterList","src":"7274:6:0"}],"id":225,"name":"FunctionDefinition","src":"7207:74:0"},{"attributes":{"body":null,"documentation":"@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * Emits a {Transfer} event.","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"transferFrom","scope":253,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"sender","scope":236,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":226,"name":"ElementaryTypeName","src":"7621:7:0"}],"id":227,"name":"VariableDeclaration","src":"7621:14:0"},{"attributes":{"constant":false,"name":"recipient","scope":236,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":228,"name":"ElementaryTypeName","src":"7637:7:0"}],"id":229,"name":"VariableDeclaration","src":"7637:17:0"},{"attributes":{"constant":false,"name":"amount","scope":236,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":230,"name":"ElementaryTypeName","src":"7656:7:0"}],"id":231,"name":"VariableDeclaration","src":"7656:14:0"}],"id":232,"name":"ParameterList","src":"7620:51:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":236,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":233,"name":"ElementaryTypeName","src":"7690:4:0"}],"id":234,"name":"VariableDeclaration","src":"7690:4:0"}],"id":235,"name":"ParameterList","src":"7689:6:0"}],"id":236,"name":"FunctionDefinition","src":"7599:97:0"},{"attributes":{"anonymous":false,"documentation":"@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n     * Note that `value` may be zero.","name":"Transfer"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"from","scope":244,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":237,"name":"ElementaryTypeName","src":"7888:7:0"}],"id":238,"name":"VariableDeclaration","src":"7888:20:0"},{"attributes":{"constant":false,"indexed":true,"name":"to","scope":244,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":239,"name":"ElementaryTypeName","src":"7910:7:0"}],"id":240,"name":"VariableDeclaration","src":"7910:18:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":244,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":241,"name":"ElementaryTypeName","src":"7930:7:0"}],"id":242,"name":"VariableDeclaration","src":"7930:13:0"}],"id":243,"name":"ParameterList","src":"7887:57:0"}],"id":244,"name":"EventDefinition","src":"7873:72:0"},{"attributes":{"anonymous":false,"documentation":"@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.","name":"Approval"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"owner","scope":252,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":245,"name":"ElementaryTypeName","src":"8125:7:0"}],"id":246,"name":"VariableDeclaration","src":"8125:21:0"},{"attributes":{"constant":false,"indexed":true,"name":"spender","scope":252,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":247,"name":"ElementaryTypeName","src":"8148:7:0"}],"id":248,"name":"VariableDeclaration","src":"8148:23:0"},{"attributes":{"constant":false,"indexed":false,"name":"value","scope":252,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":249,"name":"ElementaryTypeName","src":"8173:7:0"}],"id":250,"name":"VariableDeclaration","src":"8173:13:0"}],"id":251,"name":"ParameterList","src":"8124:63:0"}],"id":252,"name":"EventDefinition","src":"8110:78:0"}],"id":253,"name":"ContractDefinition","src":"5556:2635:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[431],"name":"SwapToken","scope":432},"children":[{"children":[{"attributes":{"contractScope":null,"name":"SafeMath","referencedDeclaration":186,"type":"library SafeMath"},"id":254,"name":"UserDefinedTypeName","src":"8293:8:0"},{"attributes":{"name":"uint256","type":"uint256"},"id":255,"name":"ElementaryTypeName","src":"8306:7:0"}],"id":256,"name":"UsingForDirective","src":"8287:27:0"},{"attributes":{"constant":false,"name":"swapsRegistered","scope":431,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"public"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":257,"name":"ElementaryTypeName","src":"8326:7:0"}],"id":258,"name":"VariableDeclaration","src":"8326:30:0"},{"attributes":{"constant":false,"name":"swaps","scope":431,"stateVariable":true,"storageLocation":"default","type":"mapping(uint256 => struct SwapToken.Swap)","value":null,"visibility":"public"},"children":[{"attributes":{"type":"mapping(uint256 => struct SwapToken.Swap)"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":259,"name":"ElementaryTypeName","src":"8373:7:0"},{"attributes":{"contractScope":null,"name":"Swap","referencedDeclaration":295,"type":"struct SwapToken.Swap"},"id":260,"name":"UserDefinedTypeName","src":"8384:4:0"}],"id":261,"name":"Mapping","src":"8364:25:0"}],"id":262,"name":"VariableDeclaration","src":"8364:38:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Registered"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"partyA","scope":268,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":263,"name":"ElementaryTypeName","src":"8433:7:0"}],"id":264,"name":"VariableDeclaration","src":"8433:22:0"},{"attributes":{"constant":false,"indexed":true,"name":"swapNumber","scope":268,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":265,"name":"ElementaryTypeName","src":"8457:7:0"}],"id":266,"name":"VariableDeclaration","src":"8457:26:0"}],"id":267,"name":"ParameterList","src":"8432:52:0"}],"id":268,"name":"EventDefinition","src":"8416:69:0"},{"attributes":{"anonymous":false,"documentation":null,"name":"Executed"},"children":[{"children":[{"attributes":{"constant":false,"indexed":true,"name":"partyB","scope":274,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":269,"name":"ElementaryTypeName","src":"8506:7:0"}],"id":270,"name":"VariableDeclaration","src":"8506:22:0"},{"attributes":{"constant":false,"indexed":true,"name":"swapNumber","scope":274,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":271,"name":"ElementaryTypeName","src":"8530:7:0"}],"id":272,"name":"VariableDeclaration","src":"8530:26:0"}],"id":273,"name":"ParameterList","src":"8505:52:0"}],"id":274,"name":"EventDefinition","src":"8491:67:0"},{"attributes":{"canonicalName":"SwapToken.Swap","name":"Swap","scope":431,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"partyA","scope":295,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":275,"name":"ElementaryTypeName","src":"8593:7:0"}],"id":276,"name":"VariableDeclaration","src":"8593:14:0"},{"attributes":{"constant":false,"name":"partyAswap","scope":295,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":277,"name":"ElementaryTypeName","src":"8618:7:0"}],"id":278,"name":"VariableDeclaration","src":"8618:18:0"},{"attributes":{"constant":false,"name":"partyAtkn","scope":295,"stateVariable":false,"storageLocation":"default","type":"contract IERC20","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IERC20","referencedDeclaration":253,"type":"contract IERC20"},"id":279,"name":"UserDefinedTypeName","src":"8644:6:0"}],"id":280,"name":"VariableDeclaration","src":"8644:16:0"},{"attributes":{"constant":false,"name":"partyB","scope":295,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":281,"name":"ElementaryTypeName","src":"8668:7:0"}],"id":282,"name":"VariableDeclaration","src":"8668:14:0"},{"attributes":{"constant":false,"name":"partyBswap","scope":295,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":283,"name":"ElementaryTypeName","src":"8690:7:0"}],"id":284,"name":"VariableDeclaration","src":"8690:18:0"},{"attributes":{"constant":false,"name":"partyBtkn","scope":295,"stateVariable":false,"storageLocation":"default","type":"contract IERC20","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IERC20","referencedDeclaration":253,"type":"contract IERC20"},"id":285,"name":"UserDefinedTypeName","src":"8716:6:0"}],"id":286,"name":"VariableDeclaration","src":"8716:16:0"},{"attributes":{"constant":false,"name":"swapNumber","scope":295,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":287,"name":"ElementaryTypeName","src":"8743:7:0"}],"id":288,"name":"VariableDeclaration","src":"8743:18:0"},{"attributes":{"constant":false,"name":"swapTermination","scope":295,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":289,"name":"ElementaryTypeName","src":"8769:7:0"}],"id":290,"name":"VariableDeclaration","src":"8769:23:0"},{"attributes":{"constant":false,"name":"details","scope":295,"stateVariable":false,"storageLocation":"default","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":291,"name":"ElementaryTypeName","src":"8803:6:0"}],"id":292,"name":"VariableDeclaration","src":"8803:14:0"},{"attributes":{"constant":false,"name":"executed","scope":295,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":293,"name":"ElementaryTypeName","src":"8828:4:0"}],"id":294,"name":"VariableDeclaration","src":"8828:13:0"}],"id":295,"name":"StructDefinition","src":"8570:279:0"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"registerSwap","scope":431,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"partyAswap","scope":358,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":296,"name":"ElementaryTypeName","src":"8891:7:0"}],"id":297,"name":"VariableDeclaration","src":"8891:18:0"},{"attributes":{"constant":false,"name":"partyAtkn","scope":358,"stateVariable":false,"storageLocation":"default","type":"contract IERC20","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IERC20","referencedDeclaration":253,"type":"contract IERC20"},"id":298,"name":"UserDefinedTypeName","src":"8917:6:0"}],"id":299,"name":"VariableDeclaration","src":"8917:16:0"},{"attributes":{"constant":false,"name":"partyB","scope":358,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":300,"name":"ElementaryTypeName","src":"8941:7:0"}],"id":301,"name":"VariableDeclaration","src":"8941:14:0"},{"attributes":{"constant":false,"name":"partyBswap","scope":358,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":302,"name":"ElementaryTypeName","src":"8963:7:0"}],"id":303,"name":"VariableDeclaration","src":"8963:18:0"},{"attributes":{"constant":false,"name":"partyBtkn","scope":358,"stateVariable":false,"storageLocation":"default","type":"contract IERC20","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"IERC20","referencedDeclaration":253,"type":"contract IERC20"},"id":304,"name":"UserDefinedTypeName","src":"8989:6:0"}],"id":305,"name":"VariableDeclaration","src":"8989:16:0"},{"attributes":{"constant":false,"name":"duration","scope":358,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":306,"name":"ElementaryTypeName","src":"9013:7:0"}],"id":307,"name":"VariableDeclaration","src":"9013:16:0"},{"attributes":{"constant":false,"name":"details","scope":358,"stateVariable":false,"storageLocation":"memory","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":308,"name":"ElementaryTypeName","src":"9040:6:0"}],"id":309,"name":"VariableDeclaration","src":"9040:21:0"}],"id":310,"name":"ParameterList","src":"8882:180:0"},{"attributes":{"parameters":[null]},"children":[],"id":311,"name":"ParameterList","src":"9070:0:0"},{"children":[{"attributes":{"assignments":[313]},"children":[{"attributes":{"constant":false,"name":"swapNumber","scope":357,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":312,"name":"ElementaryTypeName","src":"9081:7:0"}],"id":313,"name":"VariableDeclaration","src":"9081:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":26,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":258,"type":"uint256","value":"swapsRegistered"},"id":314,"name":"Identifier","src":"9102:15:0"}],"id":315,"name":"MemberAccess","src":"9102:19:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":316,"name":"Literal","src":"9122:1:0"}],"id":317,"name":"FunctionCall","src":"9102:22:0"}],"id":318,"name":"VariableDeclarationStatement","src":"9081:43:0"},{"attributes":{"assignments":[320]},"children":[{"attributes":{"constant":false,"name":"swapTermination","scope":357,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":319,"name":"ElementaryTypeName","src":"9136:7:0"}],"id":320,"name":"VariableDeclaration","src":"9136:23:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":26,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":448,"type":"uint256","value":"now"},"id":321,"name":"Identifier","src":"9162:3:0"}],"id":322,"name":"MemberAccess","src":"9162:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":307,"type":"uint256","value":"duration"},"id":323,"name":"Identifier","src":"9170:8:0"}],"id":324,"name":"FunctionCall","src":"9162:17:0"}],"id":325,"name":"VariableDeclarationStatement","src":"9136:43:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":258,"type":"uint256","value":"swapsRegistered"},"id":326,"name":"Identifier","src":"9191:15:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":26,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":258,"type":"uint256","value":"swapsRegistered"},"id":327,"name":"Identifier","src":"9209:15:0"}],"id":328,"name":"MemberAccess","src":"9209:19:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":329,"name":"Literal","src":"9229:1:0"}],"id":330,"name":"FunctionCall","src":"9209:22:0"}],"id":331,"name":"Assignment","src":"9191:40:0"}],"id":332,"name":"ExpressionStatement","src":"9191:40:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"struct SwapToken.Swap storage ref"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"type":"struct SwapToken.Swap storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":262,"type":"mapping(uint256 => struct SwapToken.Swap storage ref)","value":"swaps"},"id":333,"name":"Identifier","src":"9253:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":313,"type":"uint256","value":"swapNumber"},"id":334,"name":"Identifier","src":"9259:10:0"}],"id":335,"name":"IndexAccess","src":"9253:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":true,"lValueRequested":false,"names":[null],"type":"struct SwapToken.Swap memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IERC20_$253","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IERC20_$253","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":295,"type":"type(struct SwapToken.Swap storage pointer)","value":"Swap"},"id":336,"name":"Identifier","src":"9273:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":446,"type":"msg","value":"msg"},"id":337,"name":"Identifier","src":"9293:3:0"}],"id":338,"name":"MemberAccess","src":"9293:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":297,"type":"uint256","value":"partyAswap"},"id":339,"name":"Identifier","src":"9318:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":299,"type":"contract IERC20","value":"partyAtkn"},"id":340,"name":"Identifier","src":"9343:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":301,"type":"address","value":"partyB"},"id":341,"name":"Identifier","src":"9367:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":303,"type":"uint256","value":"partyBswap"},"id":342,"name":"Identifier","src":"9388:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":305,"type":"contract IERC20","value":"partyBtkn"},"id":343,"name":"Identifier","src":"9413:9:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":313,"type":"uint256","value":"swapNumber"},"id":344,"name":"Identifier","src":"9437:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":320,"type":"uint256","value":"swapTermination"},"id":345,"name":"Identifier","src":"9462:15:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":309,"type":"string memory","value":"details"},"id":346,"name":"Identifier","src":"9492:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":347,"name":"Literal","src":"9514:5:0"}],"id":348,"name":"FunctionCall","src":"9273:247:0"}],"id":349,"name":"Assignment","src":"9253:267:0"}],"id":350,"name":"ExpressionStatement","src":"9253:267:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":268,"type":"function (address,uint256)","value":"Registered"},"id":351,"name":"Identifier","src":"9546:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":446,"type":"msg","value":"msg"},"id":352,"name":"Identifier","src":"9557:3:0"}],"id":353,"name":"MemberAccess","src":"9557:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":313,"type":"uint256","value":"swapNumber"},"id":354,"name":"Identifier","src":"9569:10:0"}],"id":355,"name":"FunctionCall","src":"9546:34:0"}],"id":356,"name":"EmitStatement","src":"9541:39:0"}],"id":357,"name":"Block","src":"9070:519:0"}],"id":358,"name":"FunctionDefinition","src":"8861:728:0"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"executeSwap","scope":431,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"swapNumber","scope":430,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":359,"name":"ElementaryTypeName","src":"9622:7:0"}],"id":360,"name":"VariableDeclaration","src":"9622:18:0"}],"id":361,"name":"ParameterList","src":"9621:20:0"},{"attributes":{"parameters":[null]},"children":[],"id":362,"name":"ParameterList","src":"9649:0:0"},{"children":[{"attributes":{"assignments":[364]},"children":[{"attributes":{"constant":false,"name":"swap","scope":429,"stateVariable":false,"storageLocation":"storage","type":"struct SwapToken.Swap","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"Swap","referencedDeclaration":295,"type":"struct SwapToken.Swap"},"id":363,"name":"UserDefinedTypeName","src":"9661:4:0"}],"id":364,"name":"VariableDeclaration","src":"9661:17:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct SwapToken.Swap storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":262,"type":"mapping(uint256 => struct SwapToken.Swap storage ref)","value":"swaps"},"id":365,"name":"Identifier","src":"9681:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":360,"type":"uint256","value":"swapNumber"},"id":366,"name":"Identifier","src":"9687:10:0"}],"id":367,"name":"IndexAccess","src":"9681:17:0"}],"id":368,"name":"VariableDeclarationStatement","src":"9661:37:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[449,450],"referencedDeclaration":449,"type":"function (bool) pure","value":"require"},"id":369,"name":"Identifier","src":"9710:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":446,"type":"msg","value":"msg"},"id":370,"name":"Identifier","src":"9718:3:0"}],"id":371,"name":"MemberAccess","src":"9718:10:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"partyB","referencedDeclaration":282,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":372,"name":"Identifier","src":"9732:4:0"}],"id":373,"name":"MemberAccess","src":"9732:11:0"}],"id":374,"name":"BinaryOperation","src":"9718:25:0"}],"id":375,"name":"FunctionCall","src":"9710:34:0"}],"id":376,"name":"ExpressionStatement","src":"9710:34:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[449,450],"referencedDeclaration":449,"type":"function (bool) pure","value":"require"},"id":377,"name":"Identifier","src":"9755:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"executed","referencedDeclaration":294,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":378,"name":"Identifier","src":"9763:4:0"}],"id":379,"name":"MemberAccess","src":"9763:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":380,"name":"Literal","src":"9780:5:0"}],"id":381,"name":"BinaryOperation","src":"9763:22:0"}],"id":382,"name":"FunctionCall","src":"9755:31:0"}],"id":383,"name":"ExpressionStatement","src":"9755:31:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[449,450],"referencedDeclaration":449,"type":"function (bool) pure","value":"require"},"id":384,"name":"Identifier","src":"9798:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":448,"type":"uint256","value":"now"},"id":385,"name":"Identifier","src":"9806:3:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"swapTermination","referencedDeclaration":290,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":386,"name":"Identifier","src":"9813:4:0"}],"id":387,"name":"MemberAccess","src":"9813:20:0"}],"id":388,"name":"BinaryOperation","src":"9806:27:0"}],"id":389,"name":"FunctionCall","src":"9798:36:0"}],"id":390,"name":"ExpressionStatement","src":"9798:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":236,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"partyAtkn","referencedDeclaration":280,"type":"contract IERC20"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":391,"name":"Identifier","src":"9856:4:0"}],"id":394,"name":"MemberAccess","src":"9856:14:0"}],"id":395,"name":"MemberAccess","src":"9856:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"partyA","referencedDeclaration":276,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":396,"name":"Identifier","src":"9884:4:0"}],"id":397,"name":"MemberAccess","src":"9884:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"partyB","referencedDeclaration":282,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":398,"name":"Identifier","src":"9897:4:0"}],"id":399,"name":"MemberAccess","src":"9897:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"partyAswap","referencedDeclaration":278,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":400,"name":"Identifier","src":"9910:4:0"}],"id":401,"name":"MemberAccess","src":"9910:15:0"}],"id":402,"name":"FunctionCall","src":"9856:70:0"}],"id":403,"name":"ExpressionStatement","src":"9856:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"transferFrom","referencedDeclaration":236,"type":"function (address,address,uint256) external returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"partyBtkn","referencedDeclaration":286,"type":"contract IERC20"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":404,"name":"Identifier","src":"9937:4:0"}],"id":407,"name":"MemberAccess","src":"9937:14:0"}],"id":408,"name":"MemberAccess","src":"9937:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"partyB","referencedDeclaration":282,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":409,"name":"Identifier","src":"9965:4:0"}],"id":410,"name":"MemberAccess","src":"9965:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"partyA","referencedDeclaration":276,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":411,"name":"Identifier","src":"9978:4:0"}],"id":412,"name":"MemberAccess","src":"9978:11:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"partyBswap","referencedDeclaration":284,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":413,"name":"Identifier","src":"9991:4:0"}],"id":414,"name":"MemberAccess","src":"9991:15:0"}],"id":415,"name":"FunctionCall","src":"9937:70:0"}],"id":416,"name":"ExpressionStatement","src":"9937:70:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"executed","referencedDeclaration":294,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":364,"type":"struct SwapToken.Swap storage pointer","value":"swap"},"id":417,"name":"Identifier","src":"10028:4:0"}],"id":419,"name":"MemberAccess","src":"10028:13:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":420,"name":"Literal","src":"10044:4:0"}],"id":421,"name":"Assignment","src":"10028:20:0"}],"id":422,"name":"ExpressionStatement","src":"10028:20:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":274,"type":"function (address,uint256)","value":"Executed"},"id":423,"name":"Identifier","src":"10064:8:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sender","referencedDeclaration":null,"type":"address payable"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":446,"type":"msg","value":"msg"},"id":424,"name":"Identifier","src":"10073:3:0"}],"id":425,"name":"MemberAccess","src":"10073:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":360,"type":"uint256","value":"swapNumber"},"id":426,"name":"Identifier","src":"10085:10:0"}],"id":427,"name":"FunctionCall","src":"10064:32:0"}],"id":428,"name":"EmitStatement","src":"10059:37:0"}],"id":429,"name":"Block","src":"9649:456:0"}],"id":430,"name":"FunctionDefinition","src":"9601:504:0"}],"id":431,"name":"ContractDefinition","src":"8195:1913:0"}],"id":432,"name":"SourceUnit","src":"71:10037:0"}}},"version":"0.5.14+commit.01f1aaa4.Linux.g++"}
